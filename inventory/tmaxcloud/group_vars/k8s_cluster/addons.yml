---
# Kubernetes dashboard
# RBAC required. see docs/getting-started.md for access details.
# dashboard_enabled: false

# Default storage class name
# It should be changed to the storage class name user want to use
# This value can be 'nfs' or 'efs-sc' provided by the hypercloud, or any other value user create
default_storageclass_name: nfs

# StorageClass name required for pvc used by postgreSQL
# If you are using nfs the value of 'sc_name_0' and 'sc_name_999' should be 'nfs'
sc_name_0: efs-sc-0
sc_name_999: efs-sc-999
sc_name_1000: efs-sc-1000
sc_name_1001: efs-sc-1001

# nfs-external-provisioner
nfs_external_provisioner_enabled: true
nfs_namespace: nfs
nfs_server: 192.168.7.17
nfs_path: /root/test

# aws-efs-csi-driver
aws_efs_csi_enabled: false
aws_efs_csi_namespace: aws-efs-csi
aws_efs_csi_controller_replicas: 1
aws_efs_filesystem_id: fs-xxxx

# Helm deployment
helm_enabled: false

#ingress_nginx
ingress_nginx_enabled: false
ingress_nginx_http_port: 30080
ingress_nginx_https_port: 30443
ingress_nginx_service_type: "LoadBalancer"

# Registry deployment
registry_enabled: false
# registry_namespace: kube-system
# registry_storage_class: ""
# registry_disk_size: "10Gi"

# Metrics Server deployment
metrics_server_enabled: false
# metrics_server_kubelet_insecure_tls: true
# metrics_server_metric_resolution: 60s
# metrics_server_kubelet_preferred_address_types: "InternalIP"

# Rancher Local Path Provisioner
local_path_provisioner_enabled: false
# local_path_provisioner_namespace: "local-path-storage"
# local_path_provisioner_storage_class: "local-path"
# local_path_provisioner_reclaim_policy: Delete
# local_path_provisioner_claim_root: /opt/local-path-provisioner/
# local_path_provisioner_debug: false
# local_path_provisioner_image_repo: "rancher/local-path-provisioner"
# local_path_provisioner_image_tag: "v0.0.19"
# local_path_provisioner_helper_image_repo: "busybox"
# local_path_provisioner_helper_image_tag: "latest"

# Local volume provisioner deployment
local_volume_provisioner_enabled: false
# local_volume_provisioner_namespace: kube-system
# local_volume_provisioner_nodelabels:
#   - kubernetes.io/hostname
#   - topology.kubernetes.io/region
#   - topology.kubernetes.io/zone
# local_volume_provisioner_storage_classes:
#   local-storage:
#     host_dir: /mnt/disks
#     mount_dir: /mnt/disks
#     volume_mode: Filesystem
#     fs_type: ext4
#   fast-disks:
#     host_dir: /mnt/fast-disks
#     mount_dir: /mnt/fast-disks
#     block_cleaner_command:
#       - "/scripts/shred.sh"
#       - "2"
#     volume_mode: Filesystem
#     fs_type: ext4

# CephFS provisioner deployment
cephfs_provisioner_enabled: false
# cephfs_provisioner_namespace: "cephfs-provisioner"
# cephfs_provisioner_cluster: ceph
# cephfs_provisioner_monitors: "172.24.0.1:6789,172.24.0.2:6789,172.24.0.3:6789"
# cephfs_provisioner_admin_id: admin
# cephfs_provisioner_secret: secret
# cephfs_provisioner_storage_class: cephfs
# cephfs_provisioner_reclaim_policy: Delete
# cephfs_provisioner_claim_root: /volumes
# cephfs_provisioner_deterministic_names: true

# RBD provisioner deployment
rbd_provisioner_enabled: false
# rbd_provisioner_namespace: rbd-provisioner
# rbd_provisioner_replicas: 2
# rbd_provisioner_monitors: "172.24.0.1:6789,172.24.0.2:6789,172.24.0.3:6789"
# rbd_provisioner_pool: kube
# rbd_provisioner_admin_id: admin
# rbd_provisioner_secret_name: ceph-secret-admin
# rbd_provisioner_secret: ceph-key-admin
# rbd_provisioner_user_id: kube
# rbd_provisioner_user_secret_name: ceph-secret-user
# rbd_provisioner_user_secret: ceph-key-user
# rbd_provisioner_user_secret_namespace: rbd-provisioner
# rbd_provisioner_fs_type: ext4
# rbd_provisioner_image_format: "2"
# rbd_provisioner_image_features: layering
# rbd_provisioner_storage_class: rbd
# rbd_provisioner_reclaim_policy: Delete

# Nginx ingress controller deployment
# ingress_nginx_enabled: false
# ingress_nginx_host_network: false
ingress_publish_status_address: ""
# ingress_nginx_nodeselector:
#   kubernetes.io/os: "linux"
# ingress_nginx_tolerations:
#   - key: "node-role.kubernetes.io/master"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
#   - key: "node-role.kubernetes.io/control-plane"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
# ingress_nginx_namespace: "ingress-nginx"
# ingress_nginx_insecure_port: 80
# ingress_nginx_secure_port: 443
# ingress_nginx_configmap:
#   map-hash-bucket-size: "128"
#   ssl-protocols: "TLSv1.2 TLSv1.3"
# ingress_nginx_configmap_tcp_services:
#   9000: "default/example-go:8080"
# ingress_nginx_configmap_udp_services:
#   53: "kube-system/coredns:53"
# ingress_nginx_extra_args:
#   - --default-ssl-certificate=default/foo-tls
# ingress_nginx_class: nginx

# ambassador ingress controller deployment
ingress_ambassador_enabled: false
# ingress_ambassador_namespace: "ambassador"
# ingress_ambassador_version: "*"
# ingress_ambassador_multi_namespaces: false

# ALB ingress controller deployment
ingress_alb_enabled: false
# alb_ingress_aws_region: "us-east-1"
# alb_ingress_restrict_scheme: "false"
# Enables logging on all outbound requests sent to the AWS API.
# If logging is desired, set to true.
# alb_ingress_aws_debug: "false"

# Cert manager deployment
cert_manager_enabled: false
# cert_manager_namespace: "cert-manager"

# MetalLB deployment
metallb_enabled: false
metallb_speaker_enabled: "{{ metallb_enabled }}"
metallb_version: v0.13.10
metallb_protocol: "layer2"
metallb_interfaces:
  - ens2f3
metallb_config:
  address_pools:
    #    pool1:
    #      auto_assign: true
    #      ip_range:
    #        - 10.6.0.0/16
    #    pool2:
    #      auto_assign: true
    #      ip_range:
    #        - 10.10.0.0/16
    primary:
      auto_assign: true
      ip_range:
        - 10.96.0.0/16
  layer2:
    - primary
#  layer3:
#    communities:
#      NO_ADVERTISE: '65535:65282'
#      vpn-only: '1234:1'
#    defaults:
#      hold_time: 120s
#      peer_port: 179
#    metallb_peers:
#      peer1:
#        address_pool:
#          - pool1
#        communities:
#          - vpn-only
#        my_asn: 4200000000
#        peer_address: 10.6.0.1
#        peer_asn: 64512
#      peer2:
#        address_pool:
#          - pool2
#        communities:
#          - NO_ADVERTISE
#        my_asn: 4200000000
#        peer_address: 10.10.0.1
#        peer_asn: 64513
# metallb_speaker_nodeselector:
#   kubernetes.io/os: "linux"
# metallb_controller_nodeselector:
#   kubernetes.io/os: "linux"
# metallb_speaker_tolerations:
#   - key: "node-role.kubernetes.io/master"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
#   - key: "node-role.kubernetes.io/control-plane"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
# metallb_controller_tolerations:
#   - key: "node-role.kubernetes.io/master"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
#   - key: "node-role.kubernetes.io/control-plane"
#     operator: "Equal"
#     value: ""
#     effect: "NoSchedule"
# metallb_port: "7472"
# metallb_memberlist_port: '7946'
metallb_limits_cpu: "100m"
metallb_limits_mem: "100Mi"

# The plugin manager for kubectl
krew_enabled: false
krew_root_dir: "/usr/local/krew"

# Hyperauth
hyperauth_enabled: false
hyperauth_version: latest
nginx_ingress_controller_external_ip: "192.168.9.39"

# Hypercloud
hypercloud_enabled: false
hypercloud_hpcd_mode: "multi"
hypercloud_hpcd_single_operator_version: "5.0.25.16"
hypercloud_hpcd_multi_operator_version: "5.0.24.0"
hypercloud_hpcd_api_server_version: "5.0.26.0"
hypercloud_hpcd_template_version: "5.0.24.0"
hypercloud_kafka_enabled: "true"
hypercloud_kafka1_addr: "DNS"
hypercloud_kafka2_addr: "DNS"
hypercloud_kafka3_addr: "DNS"

# Cluster API
cluster_api_enabled: false
cluster_api_provider_aws: false
cluster_api_aws_access_key: ""
cluster_api_aws_secret_key: ""
cluster_api_aws_region: "us-west-1"
cluster_api_provider_vsphere: false
cluster_api_vsphere_username: "username"
cluster_api_vsphere_password: "password"

# Federation
federation_enabled: false

# console_provisioner
console_ver: "v21.0.3.1"
# operator_ver: â€œ5.1.0.1"
realm: "tmax"
keycloak: "hyperauth.{{ custom_domain_name }}"
clientid: "hypercloud5"
mc_mode: "true"

registry_operator_enabled: false
registry_operator_ingress_nginx_class: "{{ ingress_nginx_class | default('nginx-system') }}"
registry_operator_storage_class: "nfs"

hyperregistry_enabled: false
hyperregistry_ingress_nginx_class: "{{ ingress_nginx_class | default('nginx-system') }}"
hyperregistry_storage_class: "nfs"
hyperregistry_registry_disk_size: 100G

# catalog-controller
catalog_controller_enabled: false

# template-service-broker
template_service_broker_enabled: false

# helm_operator
helm_operator_enabled: false

# gateway
gateway_enabled: false

# efk
efk_enabled: false
efk_namespace: "kube-logging"
efk_es_svc_name: "elasticsearch"

# prometheus
prometheus_enabled: false

# grafana
grafana_enabled: false

# service_mesh
service_mesh_enabled: false

# console_provisioner
console_provisioner_enabled: false

# cicd
cicd_enabled: false

# image_validating_webhook
image_validating_webhook_enabled: false

# ai_devops
ai_devops_enabled: false

# argocd
argocd_enabled: false
