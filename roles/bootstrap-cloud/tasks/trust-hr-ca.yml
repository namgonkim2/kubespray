---
- name: HyperRegistry | Fetch /etc/os-release
  raw: cat /etc/os-release
  register: os_release
  changed_when: false
  # This command should always run, even in check mode
  check_mode: false

- name: HyperRegistry | Get harbor CA from secret
  shell: /usr/local/bin/kubectl get secret ingress-tls -n hyperregistry -o jsonpath="{.data['ca\.crt']}" | base64 --decode > /tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Fetch harbor CA
  fetch:
    src: /tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt
    dest: /tmp/certs
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Copy harbor CA
  copy:
    src: "/tmp/certs/{{ groups['kube_control_plane'][0] }}/tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt"
    dest: /tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt
  when:
    - inventory_hostname != groups['kube_control_plane'][0]

- name: HyperRegistry | Locate Harbor root CA for Centos
  shell: |
    mv /tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt /etc/pki/ca-trust/source/anchors/
    chmod 600 /etc/pki/ca-trust/source/anchors/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt
  when: '''ID="centos"'' in os_release.stdout_lines or ''ID="ubuntu"'' in os_release.stdout_lines or ''ID="amzn"'' in os_release.stdout_lines'

- name: HyperRegistry | Locate Harbor root CA for Redhat
  shell: |
    mv /tmp/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt /usr/share/pki/ca-trust-source/anchors/
    chmod 600 /usr/share/pki/ca-trust-source/anchors/{{ hyperregistry_release_name }}.{{ custom_domain_name }}.crt
  when: '''ID="pl"'' in os_release.stdout_lines or ''ID="rhel"'' in os_release.stdout_lines'

- name: HyperRegistry | Update CA trust
  shell: |
    update-ca-certificates
  when: '''ID="ubuntu"'' in os_release.stdout_lines'

- name: HyperRegistry | Update CA trust
  shell: |
    update-ca-trust
  when: '''ID="centos"'' in os_release.stdout_lines or ''ID="pl"'' in os_release.stdout_lines or ''ID="rhel"'' in os_release.stdout_lines or ''ID="amzn"'' in os_release.stdout_lines'

- name: HyperRegistry | Populate service facts
  ansible.builtin.service_facts:

- name: HyperRegistry | Restart container manager service
  service:
    name: crio
    state: restarted
  when: "'crio.service' in ansible_facts.services"

- name: HyperRegistry | Restart container manager service
  service:
    name: docker
    state: restarted
  when: "'docker.service' in ansible_facts.services"

- name: HyperRegistry | Wait up for running Core service
  uri:
    url: "https://{{ hyperregistry_core_subdomain }}.{{ custom_domain_name }}/api/v2.0/health"
    validate_certs: no
  register: core_health_result
  until: core_health_result.status == 200
  retries: 60
  delay: 10