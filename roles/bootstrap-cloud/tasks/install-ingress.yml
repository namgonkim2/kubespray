- name: NGINX Ingress Controller | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/ingress_nginx"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: NGINX Ingress Controller | Templates list
  set_fact:
    ingress_nginx_templates:
      - Namespace.yml
      - ServiceAccount.yml
      - ClusterRole.yml
      - ClusterRoleBinding.yml
      - Role.yml
      - RoleBinding.yml
      - ConfigMap.yml
      - Job.yml
      - Deployment.yml
      - Service.yml
      - ValidatingWebhookConfiguration.yml
      - ingress-cert-gen.sh

- name: NGINX Ingress Controller | Create manifests
  template:
    src: "{{ item }}.j2"
    dest: "{{ kube_config_dir }}/addons/ingress_nginx/{{ item }}"
  with_items: "{{ ingress_nginx_templates }}"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: NGINX Ingress Controller | Apply manifests
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/ingress_nginx/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - Namespace.yml
    - ServiceAccount.yml
    - ClusterRole.yml
    - ClusterRoleBinding.yml
    - Role.yml
    - RoleBinding.yml
    - ConfigMap.yml
    - Job.yml
    - Deployment.yml
    - Service.yml
    - ValidatingWebhookConfiguration.yml
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: NGINX Ingress Controller | Apply secret
  ansible.builtin.shell: |
    sudo chmod +755 ./ingress-cert-gen.sh
    sudo ./ingress-cert-gen.sh
  args:
    chdir: "{{ kube_config_dir }}/addons/ingress_nginx"
  ignore_errors: true

- name: NGINX Ingress Controller | Wait host ip
  shell: |
    while true; do
      IP=$({{ bin_dir }}/kubectl get svc -n {{ ingress_nginx_namespace }} {{ ingress_nginx_namespace }}-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      HOSTNAME=$({{ bin_dir }}/kubectl get svc -n {{ ingress_nginx_namespace }} {{ ingress_nginx_namespace }}-controller -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
      
      if [ -n "$IP" ]; then
        echo "IP Address Allocation complete: $IP"
        break
      elif [ -n "$HOSTNAME" ]; then
        echo "Hostname Allocation complete: $HOSTNAME"
        break
      else
        echo "ingress-nginx-system IP/Hostname Allocation not yet"
        sleep 3
      fi
    done
    sleep 3  
  register: ingress_nginx_system_controller_IPAddress
  when: inventory_hostname == groups['kube_control_plane'][0]
- debug:
    msg: "{{ ingress_nginx_system_controller_IPAddress.stdout_lines }}"
  
- name: NGINX Ingress Controller | Wait until controller container is ready
  ansible.builtin.shell: |
    {{ bin_dir }}/kubectl describe pod -n {{ ingress_nginx_namespace }} | grep 'Ready' | awk '{print $2}' | tail -n 1
  register: controller_status
  retries: 400
  delay: 5
  until: controller_status.stdout == "True"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
