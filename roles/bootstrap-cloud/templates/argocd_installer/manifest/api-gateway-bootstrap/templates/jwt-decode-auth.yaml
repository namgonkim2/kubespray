{{- if .Values.modules.jwtDecodeAuth.enabled }}
{{ $isMaster := eq .Values.global.cluster "master" }}
{{ $prefix := printf "%s-%s" .Values.global.clusterNamespace .Values.global.clusterName }}
{{ $module := "jwt-decode-auth" }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    cluster: {{ ternary "master" $prefix $isMaster }}
    gatewayBootstrap: jwt-decode-auth
  name: {{ ternary $module (printf "%s-%s" $prefix $module) $isMaster }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    name: {{ .Values.global.clusterName }}
    namespace: api-gateway-system
  source:
    path: {{ .Values.modules.jwtDecodeAuth.source.path }}
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
    helm:
      valueFiles:
        - {{ .Values.modules.jwtDecodeAuth.source.helm.valueFiles }}
      parameters:
        - name: timeZone
          value: {{ .Values.global.timeZone | default "UTC" }}
        - name: hyperauth.address
          value: {{ .Values.global.hyperauth.address | default "hyperauth.org"}}
        - name: hyperauth.realm
          value: {{ .Values.global.hyperauth.realm | default "tmax" }}
        {{- if .Values.global.registry.is_offline }}
        - name: image.repository
          value: {{ .Values.global.registry.private_registry }}/docker.io/tmaxcloudck/jwt-decode
        {{- end }}
        {{- if not .Values.modules.console.enabled }}
        - name: monitoringIngressroute.enabled
          value: "true"
        {{- end }}
  project: {{ .Values.spec.project }}
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - ApplyOutOfSyncOnly=true
---
{{ $syncWave := "jwt-decode-auth-sync-wave" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ ternary $syncWave (printf "%s-%s" $prefix $syncWave) $isMaster }}
  namespace: argocd
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: "jwt-decode-auth-sync-wave"
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded, BeforeHookCreation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: "jwt-decode-auth-sync-wave"
    spec:
      {{- with .Values.modules.jwtDecodeAuth.job.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: post-install-job
          {{- if .Values.global.registry.is_offline }}
          image: "{{ .Values.global.registry.private_registry }}/docker.io/library/alpine:3.3"
          {{- else }}
          image: "alpine:3.3"
          {{- end }}
          command: ["/bin/sleep","{{ .Values.modules.jwtDecodeAuth.syncWaitTime }}"]
          imagePullPolicy: IfNotPresent
{{- end }}