{{- if .Values.modules.certManager.enabled }}
{{ $isMaster := eq .Values.global.cluster "master" }}
{{ $prefix := printf "%s-%s" .Values.global.clusterNamespace .Values.global.clusterName }}
{{ $module := "cert-manager" }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    cluster: {{ ternary "master" $prefix $isMaster }}
    gatewayBootstrap: cert-manager
  name: {{ ternary $module (printf "%s-%s" $prefix $module) $isMaster }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  destination:
    name: {{ .Values.global.clusterName }}
    namespace: cert-manager
  source:
    path: {{ .Values.modules.certManager.source.path }}
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
    helm:
      valueFiles:
        - {{ .Values.modules.certManager.source.helm.valueFiles }}
      {{- if .Values.global.registry.is_offline }}
      parameters:
      - name: cert-manager.image.repository
        value: "{{ .Values.global.registry.private_registry }}/quay.io/jetstack/cert-manager-controller"
      - name: cert-manager.cainjector.image.repository
        value: "{{ .Values.global.registry.private_registry }}/quay.io/jetstack/cert-manager-cainjector"
      - name: cert-manager.webhook.image.repository
        value: "{{ .Values.global.registry.private_registry }}/quay.io/jetstack/cert-manager-webhook"
      - name: cert-manager.startupapicheck.image.repository
        value: "{{ .Values.global.registry.private_registry }}/quay.io/jetstack/cert-manager-ctl"
      - name: rootCA.image.repository
        value: "{{ .Values.global.registry.private_registry }}/docker.io/library/alpine:3.3"
      {{- end }}
  project: {{ .Values.spec.project }}
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - ApplyOutOfSyncOnly=true

---
{{ $syncWave := "cert-manager-sync-wave" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ ternary $syncWave (printf "%s-%s" $prefix $syncWave) $isMaster }}
  namespace: argocd
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: "cert-manager-sync-wave"
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded, BeforeHookCreation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: "cert-manager-sync-wave"
    spec:
      {{- with .Values.modules.certManager.job.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: post-install-job
          {{- if .Values.global.registry.is_offline }}
          image: "{{ .Values.global.registry.private_registry }}/docker.io/library/alpine:3.3"
          {{- else }}
          image: "alpine:3.3"
          {{- end }}
          command: ["/bin/sleep","{{ .Values.modules.certManager.syncWaitTime }}"]
          imagePullPolicy: IfNotPresent
{{- end }}