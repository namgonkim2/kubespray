apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/part-of: ingress-nginx-system
    app.kubernetes.io/version: 1.5.1
  name: ingress-nginx-system-controller
  namespace: {{ ingress_nginx_namespace }}
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx-system
      app.kubernetes.io/name: ingress-nginx-system
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx-system
        app.kubernetes.io/name: ingress-nginx-system
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --publish-service=ingress-nginx-system/ingress-nginx-system-controller
        - --election-id=ingress-nginx-system-leader
        - --controller-class=k8s.io/ingress-nginx-system
        - --ingress-class=nginx-system
        - --configmap=ingress-nginx-system/ingress-nginx-system-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        # - --tcp-services-configmap=ingress-nginx-system/tcp-services
        - --default-ssl-certificate=ingress-nginx-system/ingress-tls
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: {{ ingress_nginx_controller_image_repo }}:{{ ingress_nginx_controller_image_tag }}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
          limits:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
{% if timezone_extra_volumes %}
        - name: {{ timezone_extra_volumes.name }}
          mountPath: {{ timezone_extra_volumes.mountPath }}
          readOnly: {{ timezone_extra_volumes.readOnly | d(not (timezone_extra_volumes.writable | d(false))) | lower }}
{% endif %}
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx-system
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-system-admission
{% if timezone_extra_volumes %}
      - name: {{ timezone_extra_volumes.name }}
        hostPath:
          path: {{ timezone_extra_volumes.hostPath }}
{% endif %}

